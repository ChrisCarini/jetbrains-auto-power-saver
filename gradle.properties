pluginGroup = com.chriscarini.jetbrains
pluginName = Automatic Power Saver
pluginRepositoryUrl = https://github.com/ChrisCarini/jetbrains-auto-power-saver
# Plugin Version in SemVer format -> https://semver.org
# To release a new version of the plugin against an EAP build of IntelliJ,
# the pluginVersion should be suffixed with '-EAP'. This will release the
# plugin to the below JetBrains-hosted plugin repository:
#   - https://plugins.jetbrains.com/plugins/eap/list
# Note: You will need to configure the above URL as a custom plugin repository;
#       see directions: https://www.jetbrains.com/help/idea/managing-plugins.html#repos
pluginVersion = 5.1.0

## See https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html
## for insight into build numbers and IntelliJ Platform versions.
pluginSinceBuild = 252
pluginUntilBuild = 252.*

# Plugin Verifier integration -> https://github.com/JetBrains/gradle-intellij-plugin#plugin-verifier-dsl
# See https://jb.gg/intellij-platform-builds-list for available build versions
pluginVerifierIdeVersions = 2025.2,LATEST-EAP-SNAPSHOT
# Failure Levels: https://github.com/JetBrains/gradle-intellij-plugin/blob/master/src/main/kotlin/org/jetbrains/intellij/tasks/RunPluginVerifierTask.kt
# Exclude `DEPRECATED_API_USAGES` as we use `FrameStateListener.onFrameDeactivated()` in
# `FocusPowerSaveService.IdeFrameStatePowerSaveListener` (2022.3)
# Exclude `DEPRECATED_API_USAGES` as we use `FrameStateListener.onFrameActivated()` in `FocusPowerSaveService.IdeFrameStatePowerSaveListener`.
# Exclude `NOT_DYNAMIC` as we use non-dynamic extension `productivityFeaturesProvider` (in `plugin.xml`).
pluginVerifierExcludeFailureLevels = DEPRECATED_API_USAGES,NOT_DYNAMIC
# Mute Plugin Problems -> https://github.com/JetBrains/intellij-plugin-verifier?tab=readme-ov-file#check-plugin
# Used to mute (ignore) a comma-seperated list of plugin problems.
pluginVerifierMutePluginProblems =

# IntelliJ Platform Properties -> https://github.com/JetBrains/gradle-intellij-plugin#intellij-platform-properties
platformType = IC
# see https://www.jetbrains.com/intellij-repository/releases/
# and https://www.jetbrains.com/intellij-repository/snapshots/
# To use/download EAP add '-EAP-SNAPSHOT' to the version, i.e. 'IU-191.6014.8-EAP-SNAPSHOT'
#        platformVersion = '201.6668.60-EAP-SNAPSHOT'
#platformVersion = 2024.1.4                     ## 2024.1.4
#platformVersion = 242.20224.91-EAP-SNAPSHOT    ## 2024.2 Beta
#platformVersion = 242.20224.159-EAP-SNAPSHOT   ## 2024.2 RC1
platformVersion = 2025.2

# Plugin Dependencies -> https://plugins.jetbrains.com/docs/intellij/plugin-dependencies.html
# Example: platformPlugins = com.jetbrains.php:203.4449.22, org.intellij.scala:2023.3.27@EAP
platformPlugins =
# Example: platformBundledPlugins = com.intellij.java
platformBundledPlugins =

# Java language level used to compile sources and to generate the files for
# - Java 11 is required since 2020.3
# - Java 17 is required since 2022.2
# - Java 21 is required since 2024.2
# See https://jb.gg/intellij-platform-versions for details.
javaVersion = 21

# Publish the plugin to the JetBrains Plugin Repository
publishPlugin = true

##
# ----- NON JETBRAINS PLUGIN SETTINGS -----
##
# Use the secondary JetBrains JDK (i.e. 2019.2: 'true' for Java 8, 'false' for java 11)
systemProp.idea.jdk.secondary=true
org.gradle.jvmargs=-Xmx2g
# A long-running Gradle process to speed up local builds.
# To stop the daemon run 'gradlew --stop'
org.gradle.daemon=true
# Lazy configuration of projects speeds up the evaluation of large projects. This is especially
# useful when invoking a specific project task (e.g. gradlew :jetbrains-auto-power-saver:build)
org.gradle.configureondemand=true
# Run subproject tasks in parallel. Results in higher CPU usage, but faster builds
org.gradle.parallel=true
# Allows generation of idea/eclipse metadata for a specific subproject and its upstream project dependencies
ide.recursive=true